'''
문제 설명
6종류(1원, 5원, 10원, 50원, 100원, 500원)의 동전을 생산하는 공장이 있습니다. 특정 금액만큼 동전을 생산해달라는 의뢰가 들어왔을 때, 최소 비용으로 그 금액만큼 동전을 생산하고자 합니다.

화폐 단위(원)	생산 단가(원)
1	1
5	4
10	99
50	35
100	50
500	1000
만약 각 동전의 생산 단가가 위의 표와 같고, 의뢰받은 금액이 4578원이라면, 최소의 비용으로 4578원어치의 동전을 생산하는 방법은 다음과 같습니다.


화폐 단위(원)	생산 단가(원)	생산 수량(개)	생산 비용(원)	생산 화폐 가치(원)
1	1	3	1 x 3 = 3	1 x 3 = 3
5	4	5	4 x 5 = 20	5 x 5 = 25
10	99	0	99 x 0 = 0	10 x 0 = 0
50	35	1	35 x 1 = 35	50 x 1 = 50
100	50	45	50 x 45 = 2250	100 x 45 = 4500
500	1000	0	1000 x 0 = 0	500 x 0 = 0
총 비용			3 + 20 + 35 + 2250 = 2308	
총 화폐 가치				3 + 25 + 50 + 4500 = 4578
즉, 1원짜리 동전을 3개, 5원짜리 동전을 5개, 50원짜리 동전을 1개, 100원짜리 동전을 45개 생산하면 2308원이라는 최소 비용으로 4578원어치의 동전을 생산할 수 있습니다. 2308원보다 적은 비용으로 4578원어치의 동전을 생산할 수 있는 방법은 없습니다.

공장이 생산해야 하는 금액을 나타내는 정수 money, 6종류 동전의 생산 단가를 나타내는 1차원 정수 배열 costs가 매개변수로 주어집니다. money원만큼의 동전을 최소 비용으로 생산했을 때, 그 최소 비용을 return 하도록 solution 함수를 완성해주세요.
'''


def solution(money, costs):
    answer = 0
    costs_orgin = [1, 5, 10, 50, 100, 500]
    flag = [0] * 6

    for i in range(6):
        for j in range(i + 1, 6):
            n = costs_orgin[j] // costs_orgin[i]
            if costs[i] * n < costs[j]:
                flag[j] = 1
    
    for i in range(5, -1, -1):
        if flag[i]:
            continue
        tmp = money // costs_orgin[i]
        answer += costs[i] * tmp
        money = money % costs_orgin[i]

    
    return answer
